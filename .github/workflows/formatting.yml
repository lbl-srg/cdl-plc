# Workflow for CI testsname: CI-documentation-and-format# Controls when the action will run.on:  # Triggers the workflow on push events but only for the master branch  push:    branches: [ add_CI_workflow ]# Allows you to run this workflow manually from the Actions tab#  workflow_dispatch:defaults:  run:    shell: bash# A workflow run is made up of one or more jobs that can run sequentially or in paralleljobs:  test-modelica-json:    # Skip if the commit message contains "ci skip"    #if: "!contains(github.event.head_commit.message, 'ci skip')"    runs-on: ubuntu-22.04    steps:      # Checks-out repository under $GITHUB_WORKSPACE, so job can access it      - name: Checkout code        uses: actions/checkout@v3      - uses: actions/setup-python@v4        with:          python-version: '3.10.11' # Version range or exact version of a Python version to use, using SemVer's version range syntax          architecture: 'x64'      # optional x64 or x86. Defaults to x64 if not specified      - name: "Install pip"        run: pip3 install --upgrade pip wheel      - name: Download modelica-json-1.2.0.zip        run: wget https://github.com/lbl-srg/modelica-json/releases/download/v1.2.0/modelica-json-1.2.0.zip -O modelica-json-1.2.0.zip      - name: Unzip modelica-json-1.2.0.zip        run: unzip modelica-json-1.2.0.zip -d modelica-json      - name: Display folder structure        run: tree      - name: Set MODELICAPATH environment variable        run: echo "export MODELICAPATH=\${MODELICAPATH}:/usr/local/Modelica/Library/" >> ~/.bashrc      - name: Install Java dependencies        run: sudo apt-get update && sudo apt-get install -y default-jdk default-jre      - name: Install parser dependencies        run: |            cd modelica-json/modelica-json-1.2.0            make install      - name: Compile Java files        run: |            cd modelica-json/modelica-json-1.2.0            make compile      #- name: Run test cases      #  run: |      #      cd modelica-json/modelica-json-1.2.0      #      npm test      - name: Translate Modelica test cases to jsonld        run: |            cd modelica-json/modelica-json-1.2.0            node app.js -f ../../ModelicaTestCases/CompositeBlocks/CustomPWithLimiter.mo -o cxf            node app.js -f ../../ModelicaTestCases/CompositeBlocks/Custom01.mo -o cxf            node app.js -f ../../ModelicaTestCases/CompositeBlocks/Custom02.mo -o cxf            node app.js -f ../../ModelicaTestCases/CompositeBlocks/Custom03.mo -o cxf            node app.js -f ../../ModelicaTestCases/SingleBlocks/Reals/Add.mo -o cxf            node app.js -f ../../ModelicaTestCases/SingleBlocks/Reals/MultiplyByParameter.mo -o cxf      - name: Compare changes between existing and new jsonld's        run: |          diff -r modelica-json/modelica-json-1.2.0/cxf/home/runner/work/cdl-plc/cdl-plc/ModelicaTestCases/ cxf/ModelicaTestCases/      - name: Run translate_test_cases.py        run: |          pip install Jinja2          cd .CI/tests          python translate_test_cases.py        - name: Display folder structure        run: tree