# Workflow for CI testsname: CI-check_modelica-json_translator# Controls when the action will run.on:  # Triggers the workflow on push events but only for the master branch  push:    branches: [ main, add_CI_workflow ]# Allows you to run this workflow manually from the Actions tab#  workflow_dispatch:defaults:  run:    shell: bash# A workflow run is made up of one or more jobs that can run sequentially or in paralleljobs:  test-modelica-json:    # Skip if the commit message contains "ci skip"    #if: "!contains(github.event.head_commit.message, 'ci skip')"    runs-on: ubuntu-22.04    steps:      # Checks-out repository under $GITHUB_WORKSPACE, so job can access it      - name: Checkout code        uses: actions/checkout@v3      - uses: actions/setup-python@v4        with:          python-version: '3.10.11' # Version range or exact version of a Python version to use, using SemVer's version range syntax          architecture: 'x64'      # optional x64 or x86. Defaults to x64 if not specified      - name: "Install pip"        run: pip3 install --upgrade pip wheel      - name: Download modelica-json-1.2.0.zip        run: wget https://github.com/lbl-srg/modelica-json/releases/download/v1.2.0/modelica-json-1.2.0.zip -O modelica-json-1.2.0.zip      - name: Unzip modelica-json-1.2.0.zip        run: unzip modelica-json-1.2.0.zip -d modelica-json      - name: Set MODELICAPATH environment variable        run: echo "export MODELICAPATH=\${MODELICAPATH}:/usr/local/Modelica/Library/" >> ~/.bashrc      - name: Install Java dependencies        run: sudo apt-get update && sudo apt-get install -y default-jdk default-jre      - name: Install parser dependencies        run: |            cd modelica-json/modelica-json-1.2.0            make install      - name: Compile Java files        run: |            cd modelica-json/modelica-json-1.2.0            make compile      - name: Translate Modelica test cases to jsonld        run: |            cd modelica-json/modelica-json-1.2.0            node app.js -f ../../ModelicaTestCases/CompositeBlocks/CustomPWithLimiter.mo -o cxf            node app.js -f ../../ModelicaTestCases/CompositeBlocks/Custom01.mo -o cxf            node app.js -f ../../ModelicaTestCases/CompositeBlocks/Custom02.mo -o cxf            node app.js -f ../../ModelicaTestCases/CompositeBlocks/Custom03.mo -o cxf            node app.js -f ../../ModelicaTestCases/SingleBlocks/Reals/Add.mo -o cxf            node app.js -f ../../ModelicaTestCases/SingleBlocks/Reals/MultiplyByParameter_1.mo -o cxf            node app.js -f ../../ModelicaTestCases/SingleBlocks/Reals/MultiplyByParameter_2.mo -o cxf            node app.js -f ../../ModelicaTestCases/SingleBlocks/Reals/PID.mo -o cxf      - name: Compare changes between jsonld's translated in this job vs. manually translated existing jsonld's in repo        run: |          diff -r modelica-json/modelica-json-1.2.0/cxf/home/runner/work/cdl-plc/cdl-plc/ModelicaTestCases/ cxf/ModelicaTestCases/      - name: Run translate_test_cases.py        run: |          pip install Jinja2          cd .CI/tests          python translate_test_cases.py --output check_translation_to_IEC_XML      - name: "Debug: list files"        run: |          pwd          ls -R .CI/tests      - name: Upload translation output        uses: actions/upload-artifact@v4        with:          name: translation-results          path: .CI/tests/check_translation_to_IEC_XML/      - name: Compare changes between IEC XML's translated in this job and existing IEC XML's in the repo        run: |          diff -r --exclude="README.md" IEC61131-10XML/ check_translation_to_IEC_XML/IEC61131-10XML/